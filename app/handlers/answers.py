from aiogram import Router, types, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

answer_router = Router()

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
class AnswerState(StatesGroup):
    waiting_for_answer = State()

# --- –ö–Ω–æ–ø–∫–∞ "–û—Ç–º–µ–Ω–∏—Ç—å" ---
def cancel_button() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_reply")]
    ])

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å" ---
@answer_router.callback_query(F.data.startswith("reply:"))
async def on_reply_click(callback: types.CallbackQuery, state: FSMContext):
    _, user_id, message_id = callback.data.split(":")
    await state.set_state(AnswerState.waiting_for_answer)
    await state.update_data(target_user=int(user_id))
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª üëá", reply_markup=cancel_button())
    await callback.answer()

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –æ—Ç–≤–µ—Ç–∞ (—Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è) ---
@answer_router.message(AnswerState.waiting_for_answer)
async def process_answer(message: types.Message, state: FSMContext):
    data = await state.get_data()
    user_id = data.get("target_user")

    try:
        await message.copy_to(chat_id=user_id)
        await message.answer("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚úÖ")
    except Exception as e:
        await message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    await state.clear()

# --- –û—Ç–º–µ–Ω–∞ –æ—Ç–≤–µ—Ç–∞ ---
@answer_router.callback_query(F.data == "cancel_reply")
async def cancel_reply(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await callback.answer()
